{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"F:/UZomus/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Form, Input, Select, Button } from 'antd';\nvar Option = Select.Option;\n\nvar PriceInput = function PriceInput(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? {} : _ref$value,\n      onChange = _ref.onChange;\n\n  var _useState = useState(0),\n      number = _useState[0],\n      setNumber = _useState[1];\n\n  var _useState2 = useState('rmb'),\n      currency = _useState2[0],\n      setCurrency = _useState2[1];\n\n  var triggerChange = function triggerChange(changedValue) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(_objectSpread(_objectSpread({\n      number: number,\n      currency: currency\n    }, value), changedValue));\n  };\n\n  var onNumberChange = function onNumberChange(e) {\n    var newNumber = parseInt(e.target.value || '0', 10);\n\n    if (Number.isNaN(number)) {\n      return;\n    }\n\n    if (!('number' in value)) {\n      setNumber(newNumber);\n    }\n\n    triggerChange({\n      number: newNumber\n    });\n  };\n\n  var onCurrencyChange = function onCurrencyChange(newCurrency) {\n    if (!('currency' in value)) {\n      setCurrency(newCurrency);\n    }\n\n    triggerChange({\n      currency: newCurrency\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"span\", {\n    children: [/*#__PURE__*/_jsx(Input, {\n      type: \"text\",\n      value: value.number || number,\n      onChange: onNumberChange,\n      style: {\n        width: 100\n      }\n    }), /*#__PURE__*/_jsxs(Select, {\n      value: value.currency || currency,\n      style: {\n        width: 80,\n        margin: '0 8px'\n      },\n      onChange: onCurrencyChange,\n      children: [/*#__PURE__*/_jsx(Option, {\n        value: \"dollar\",\n        children: \"USD\"\n      }), /*#__PURE__*/_jsx(Option, {\n        value: \"euro\",\n        children: \"Euro\"\n      }), /*#__PURE__*/_jsx(Option, {\n        value: \"gbr\",\n        children: \"GBR\"\n      })]\n    })]\n  });\n};\n\nvar SellerProductPrice = function SellerProductPrice() {\n  var onFinish = function onFinish(values) {\n    console.log('Received values from form: ', values);\n  };\n\n  var checkPrice = function checkPrice(_, value) {\n    if (value.number > 0) {\n      return Promise.resolve();\n    }\n\n    return Promise.reject(new Error('Price must be greater than zero!'));\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Form, {\n      name: \"customized_form_controls\",\n      layout: \"inline\",\n      onFinish: onFinish,\n      initialValues: {\n        price: {\n          number: 0,\n          currency: 'gbr'\n        }\n      },\n      children: /*#__PURE__*/_jsx(Form.Item, {\n        name: \"price\",\n        label: \"Product Price\",\n        rules: [{\n          validator: checkPrice\n        }],\n        children: /*#__PURE__*/_jsx(PriceInput, {})\n      })\n    })\n  });\n};\n\nexport default SellerProductPrice;","map":null,"metadata":{},"sourceType":"module"}