{"ast":null,"code":"import _regeneratorRuntime from \"F:/UZOMOS PROJECT/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"F:/UZOMOS PROJECT/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"F:\\\\UZOMOS PROJECT\\\\uzomas_frontend\\\\components\\\\shared\\\\widgets\\\\WidgetBlogRecentPosts.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport PostRepository from '~/repositories/PostRepository';\n\nvar WidgetBlogRecentPosts = function WidgetBlogRecentPosts() {\n  _s();\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  function getPosts() {\n    return _getPosts.apply(this, arguments);\n  }\n\n  function _getPosts() {\n    _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var queries, responseData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              queries = {\n                _limit: 4\n              };\n              _context.next = 3;\n              return PostRepository.getPosts(queries);\n\n            case 3:\n              responseData = _context.sent;\n\n              if (!responseData) {\n                _context.next = 10;\n                break;\n              }\n\n              setTimeout(function () {\n                setLoading(false);\n              }, 200);\n              setPosts(responseData);\n              return _context.abrupt(\"return\", responseData);\n\n            case 10:\n              setPosts(null);\n              return _context.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getPosts.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getPosts();\n  }, []); // Views\n\n  var postsView;\n\n  if (!loading) {\n    if (posts && posts.length > 0) {\n      postsView = posts.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/post/[pid]\",\n          as: \"/post/\".concat(item.id),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, _this);\n      });\n    }\n  } else {\n    postsView = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"widget widget--blog widget--recent-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"widget__title\",\n      children: \"Recent Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget__content\",\n      children: postsView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(WidgetBlogRecentPosts, \"iyeZLpCGdlQJNDFi8bTJGpCQYBY=\");\n\n_c = WidgetBlogRecentPosts;\nexport default WidgetBlogRecentPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetBlogRecentPosts\");","map":{"version":3,"sources":["F:/UZOMOS PROJECT/uzomas_frontend/components/shared/widgets/WidgetBlogRecentPosts.jsx"],"names":["React","useEffect","useState","Link","PostRepository","WidgetBlogRecentPosts","loading","setLoading","posts","setPosts","getPosts","queries","_limit","responseData","setTimeout","postsView","length","map","item","id","title"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAAA;;AAAA,kBACFH,QAAQ,CAAC,IAAD,CADN;AAAA,MACzBI,OADyB;AAAA,MAChBC,UADgB;;AAAA,mBAENL,QAAQ,CAAC,IAAD,CAFF;AAAA,MAEzBM,KAFyB;AAAA,MAElBC,QAFkB;;AAAA,WAIjBC,QAJiB;AAAA;AAAA;;AAAA;AAAA,yEAIhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,cAAAA,OAAO,GAAG;AACNC,gBAAAA,MAAM,EAAE;AADF,eAAV;AAFJ;AAAA,qBAKyBR,cAAc,CAACM,QAAf,CAAwBC,OAAxB,CALzB;;AAAA;AAKIE,cAAAA,YALJ;;AAAA,mBAOQA,YAPR;AAAA;AAAA;AAAA;;AAQQC,cAAAA,UAAU,CAAC,YAAY;AACnBP,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACH,eAFS,EAEP,GAFO,CAAV;AAGAE,cAAAA,QAAQ,CAACI,YAAD,CAAR;AAXR,+CAYeA,YAZf;;AAAA;AAcQJ,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAdR,+CAee,IAff;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJgC;AAAA;AAAA;;AAsBhCR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT,CAtBgC,CA0BhC;;AACA,MAAIK,SAAJ;;AACA,MAAI,CAACT,OAAL,EAAc;AACV,QAAIE,KAAK,IAAIA,KAAK,CAACQ,MAAN,GAAe,CAA5B,EAA+B;AAC3BD,MAAAA,SAAS,GAAGP,KAAK,CAACS,GAAN,CAAU,UAACC,IAAD;AAAA,4BAClB,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,EAAE,kBAAWA,IAAI,CAACC,EAAhB,CAA3B;AAAA,iCACI;AAAA,sBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBADkB;AAAA,OAAV,CAAZ;AAKH;AACJ,GARD,MAQO;AACHL,IAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAZ;AACH;;AAED,sBACI;AAAO,IAAA,SAAS,EAAC,yCAAjB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CA9CD;;GAAMV,qB;;KAAAA,qB;AAgDN,eAAeA,qBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport PostRepository from '~/repositories/PostRepository';\r\n\r\nconst WidgetBlogRecentPosts = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [posts, setPosts] = useState(null);\r\n\r\n    async function getPosts() {\r\n        let queries, responseData;\r\n        queries = {\r\n            _limit: 4,\r\n        };\r\n        responseData = await PostRepository.getPosts(queries);\r\n\r\n        if (responseData) {\r\n            setTimeout(function () {\r\n                setLoading(false);\r\n            }, 200);\r\n            setPosts(responseData);\r\n            return responseData;\r\n        } else {\r\n            setPosts(null);\r\n            return null;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n\r\n    // Views\r\n    let postsView;\r\n    if (!loading) {\r\n        if (posts && posts.length > 0) {\r\n            postsView = posts.map((item) => (\r\n                <Link href=\"/post/[pid]\" as={`/post/${item.id}`}>\r\n                    <a>{item.title}</a>\r\n                </Link>\r\n            ));\r\n        }\r\n    } else {\r\n        postsView = <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <aside className=\"widget widget--blog widget--recent-post\">\r\n            <h3 className=\"widget__title\">Recent Posts</h3>\r\n            <div className=\"widget__content\">{postsView}</div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default WidgetBlogRecentPosts;\r\n"]},"metadata":{},"sourceType":"module"}