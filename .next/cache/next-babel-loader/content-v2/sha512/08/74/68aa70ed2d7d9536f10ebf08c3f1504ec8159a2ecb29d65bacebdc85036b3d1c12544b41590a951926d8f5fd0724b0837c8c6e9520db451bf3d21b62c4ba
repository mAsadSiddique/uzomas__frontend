{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'antd';\nimport Link from 'next/link';\nimport { changeVendor } from '~/store/vendor/action';\n\nconst SwitchVendor = () => {\n  const {\n    0: vendor,\n    1: setVendor\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const dispatch = useDispatch();\n  const result = useSelector(state => state.vendor);\n  const history = useHistory();\n  console.log('Vendor', result);\n  const switchVendor = vendor === false ? {\n    path: '/vendor/store-list',\n    change: 'Switch to Buyer',\n    cond: true\n  } : {\n    path: '/vendor/become-a-vendor',\n    change: 'Switch to Seller',\n    cond: false\n  };\n\n  const handleChangeVendor = async (e, switchVendor) => {\n    setLoading(true);\n    e.preventDefault();\n    vendor === false ? setVendor(true) : setVendor(false);\n    await dispatch(changeVendor(switchVendor));\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(Button, {\n      disabled: loading,\n      onClick: e => handleChangeVendor(e, switchVendor),\n      children: vendor === true ? /*#__PURE__*/_jsx(Link, {\n        href: `${result.Vendor.path}`,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: result.Vendor.change\n        })\n      }) : /*#__PURE__*/_jsx(Link, {\n        href: `${result.Vendor.path}`,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: result.Vendor.change\n        })\n      })\n    })\n  });\n};\n\nexport default SwitchVendor;","map":null,"metadata":{},"sourceType":"module"}