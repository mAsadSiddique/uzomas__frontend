{"ast":null,"code":"import _regeneratorRuntime from \"F:/UZOMOS PROJECT/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOutSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nfunction loginSaga(action) {\n  return _regeneratorRuntime.wrap(function loginSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(action);\n          _context.prev = 1;\n          _context.next = 4;\n          return put(loginSuccess(action.payload));\n\n        case 4:\n          modalSuccess('success');\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 7]]);\n}\n\nfunction logOutSaga() {\n  return _regeneratorRuntime.wrap(function logOutSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put(logOutSuccess());\n\n        case 3:\n          modalWarning('warning');\n          _context2.next = 9;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["F:/UZOMOS PROJECT/uzomas_frontend/store/auth/saga.js"],"names":["loginSaga","logOutSaga","rootSaga","all","put","takeEvery","notification","actionTypes","loginSuccess","logOutSuccess","modalSuccess","type","message","description","modalWarning","action","console","log","payload","LOGIN_REQUEST","LOGOUT"],"mappings":";;oDAmBUA,S;qDAUAC,U;qDASeC,Q;;AAtCzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3BL,EAAAA,YAAY,CAACK,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,IAAD,EAAU;AAC3BL,EAAAA,YAAY,CAACK,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,SAAUb,SAAV,CAAoBe,MAApB;AAAA;AAAA;AAAA;AAAA;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AADJ;AAAA;AAGQ,iBAAMX,GAAG,CAACI,YAAY,CAACO,MAAM,CAACG,OAAR,CAAb,CAAT;;AAHR;AAIQR,UAAAA,YAAY,CAAC,SAAD,CAAZ;AAJR;AAAA;;AAAA;AAAA;AAAA;AAMQM,UAAAA,OAAO,CAACC,GAAR;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUhB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMG,GAAG,CAACK,aAAa,EAAd,CAAT;;AAFR;AAGQK,UAAAA,YAAY,CAAC,SAAD,CAAZ;AAHR;AAAA;;AAAA;AAAA;AAAA;AAKQE,UAAAA,OAAO,CAACC,GAAR;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUf,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACY,aAAb,EAA4BnB,SAA5B,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACa,MAAb,EAAqBnB,UAArB,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\r\nimport { notification } from 'antd';\r\n\r\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\r\n\r\nconst modalSuccess = (type) => {\r\n    notification[type]({\r\n        message: 'Wellcome back',\r\n        description: 'You are login successful!',\r\n    });\r\n};\r\n\r\nconst modalWarning = (type) => {\r\n    notification[type]({\r\n        message: 'Good bye!',\r\n        description: 'Your account has been logged out!',\r\n    });\r\n};\r\n\r\nfunction* loginSaga(action) {\r\n    console.log(action);\r\n    try {\r\n        yield put(loginSuccess(action.payload));\r\n        modalSuccess('success');\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* logOutSaga() {\r\n    try {\r\n        yield put(logOutSuccess());\r\n        modalWarning('warning');\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\r\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}