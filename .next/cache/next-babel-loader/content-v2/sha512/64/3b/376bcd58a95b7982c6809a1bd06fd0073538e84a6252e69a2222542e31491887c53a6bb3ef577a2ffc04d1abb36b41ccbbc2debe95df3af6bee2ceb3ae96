{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/naeem/f-w/market-luxery-leader/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/naeem/f-w/market-luxery-leader/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/naeem/f-w/market-luxery-leader/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/naeem/f-w/market-luxery-leader/components/partials/account/Login.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { login } from '../../../store/auth/action';\nimport Web3 from 'web3';\nimport LazyLoad from 'react-lazyload';\nimport { useWeb3React } from '@web3-react/core';\nimport { Form, Input, notification } from 'antd';\nimport { connect } from 'react-redux';\nimport { Injected, Ledger, Trezor, Torus, Fortmatic, Authereum, WalletConnect } from './walletConnectors';\n\nvar Login = function Login(props) {\n  _s();\n\n  var web3 = new Web3(Web3.givenProvider);\n  var context = useWeb3React();\n  var activate = context.activate,\n      active = context.active,\n      error = context.error,\n      deactivate = context.deactivate,\n      library = context.library,\n      chainId = context.chainId,\n      account = context.account,\n      connector = context.connector;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activatingConnector = _React$useState2[0],\n      setActivatingConnector = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n  React.useEffect(function () {\n    if (props.isLoggedIn === true) {\n      Router.push('/');\n    }\n  }, [props.isLoggedIn]);\n\n  var handleFeatureWillUpdate = function handleFeatureWillUpdate(e) {\n    notification.open({\n      message: 'Opp! Something went wrong.',\n      description: 'This feature has been updated later!',\n      duration: 500\n    });\n  };\n\n  var handleLoginSubmit = function handleLoginSubmit(accountType) {\n    console.log('test');\n\n    if (accountType === 'metamask') {\n      loadWeb3();\n    } else if (accountType === 'ledger') {\n      activate(Ledger);\n    } else if (accountType === 'walletconnect') {\n      handleWalletConnectLogin();\n    } else if (accountType === 'formatic') {\n      activate(Fortmatic);\n    } else if (accountType === 'authereum') {\n      activate(Authereum);\n    }\n  };\n\n  var handleWalletConnectLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (activatingConnector === null || activatingConnector === undefined) {\n                activate(walletconnect);\n                sessionStorage.setItem('type', 'walletconnect');\n              } else {\n                if (account) {\n                  sessionStorage.setItem('Walletaddress', account);\n                  sessionStorage.setItem('type', 'walletconnect');\n                  setAddress(account);\n                }\n              }\n\n              _context.next = 3;\n              return setActivatingConnector(Injected);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleWalletConnectLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //save account in session storage when we get account\n  // React.useEffect(() => {\n  //     if (account) {\n  //         Router.push('/');\n  //     }\n  // }, [account]);\n\n\n  var loadWeb3 = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var isConnected, _web, accounts;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              isConnected = false;\n              _context2.prev = 1;\n\n              if (!window.ethereum) {\n                _context2.next = 9;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context2.next = 6;\n              return window.ethereum.enable();\n\n            case 6:\n              isConnected = true;\n              _context2.next = 10;\n              break;\n\n            case 9:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n              } else {\n                isConnected = false;\n                notification.open({\n                  message: 'Metamask is not installed',\n                  description: ' please install it on your browser to connect.',\n                  duration: 500\n                }); // \"Metamask is not installed, please install it on your browser to connect.\",\n              }\n\n            case 10:\n              if (!(isConnected === true)) {\n                _context2.next = 18;\n                break;\n              }\n\n              _web = window.web3;\n              _context2.next = 14;\n              return _web.eth.getAccounts();\n\n            case 14:\n              accounts = _context2.sent;\n              props.dispatch(login(accounts[0]));\n              Router.push('/');\n              window.ethereum.on('accountsChanged', function (accounts) {\n                props.dispatch(login(accounts[0]));\n              });\n\n            case 18:\n              _context2.next = 23;\n              break;\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 20]]);\n    }));\n\n    return function loadWeb3() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ps-my-account\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ps-form--account\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ps-tab active\",\n          id: \"sign-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ps-form__content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Connect to your wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group submit\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('metamask');\n                },\n                children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/static/img/meta-mask.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, _this), \"Connect to Metamask\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('formatic');\n                },\n                children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/static/img/formatic.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, _this), \"Connect to Formatic\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('authereum');\n                },\n                children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/static/img/authereum-logo.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px',\n                      height: '35px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, _this), \"Connect to Authereum\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('walletconnect');\n                },\n                children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/static/img/walletconnect.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, _this), \"Connect to WalletConnect\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('torus');\n                },\n                children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/static/img/torus-logo.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, _this), \"Connect to Torus\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('ledger');\n                },\n                children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/static/img/Ledger-logo.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, _this), \"Connect to Ledger\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ps-form__footer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, _this);\n}; // const mapStateToProps = (state) => {\n//     return state.auth;\n// };\n// export default connect(mapStateToProps)(Login);\n\n\n_s(Login, \"EwhxJne0ZWLyzu1HN8TTY/XOG5o=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/naeem/f-w/market-luxery-leader/components/partials/account/Login.jsx"],"names":["React","Component","Link","Router","login","Web3","LazyLoad","useWeb3React","Form","Input","notification","connect","Injected","Ledger","Trezor","Torus","Fortmatic","Authereum","WalletConnect","Login","props","web3","givenProvider","context","activate","active","error","deactivate","library","chainId","account","connector","useState","activatingConnector","setActivatingConnector","useEffect","undefined","isLoggedIn","push","handleFeatureWillUpdate","e","open","message","description","duration","handleLoginSubmit","accountType","console","log","loadWeb3","handleWalletConnectLogin","walletconnect","sessionStorage","setItem","setAddress","isConnected","window","ethereum","enable","currentProvider","eth","getAccounts","accounts","dispatch","on","padding","paddingRight","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport { login } from '../../../store/auth/action';\r\nimport Web3 from 'web3';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Form, Input, notification } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Injected,\r\n    Ledger,\r\n    Trezor,\r\n    Torus,\r\n    Fortmatic,\r\n    Authereum,\r\n    WalletConnect,\r\n} from './walletConnectors';\r\n\r\nconst Login = (props) => {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const context = useWeb3React();\r\n    const {\r\n        activate,\r\n        active,\r\n        error,\r\n        deactivate,\r\n        library,\r\n        chainId,\r\n        account,\r\n        connector,\r\n    } = context;\r\n    const [activatingConnector, setActivatingConnector] = React.useState();\r\n    React.useEffect(() => {\r\n        if (activatingConnector && activatingConnector === connector) {\r\n          setActivatingConnector(undefined)\r\n        }\r\n      }, [activatingConnector, connector])\r\n\r\n    React.useEffect(() => {\r\n        if (props.isLoggedIn === true) {\r\n            Router.push('/');\r\n        }\r\n    }, [props.isLoggedIn]);\r\n\r\n    const handleFeatureWillUpdate = (e) => {\r\n        notification.open({\r\n            message: 'Opp! Something went wrong.',\r\n            description: 'This feature has been updated later!',\r\n            duration: 500,\r\n        });\r\n    };\r\n\r\n    const handleLoginSubmit = (accountType) => {\r\n        console.log('test');\r\n        if (accountType === 'metamask') {\r\n            loadWeb3();\r\n        } else if (accountType === 'ledger') {\r\n            activate(Ledger);\r\n        } else if (accountType === 'walletconnect') {\r\n            handleWalletConnectLogin()\r\n        }else if (accountType === 'formatic') {\r\n            activate(Fortmatic);\r\n        }else if (accountType === 'authereum') {\r\n            activate(Authereum);\r\n        }\r\n    };\r\n\r\n    const handleWalletConnectLogin = async () => {\r\n        if (activatingConnector === null || activatingConnector === undefined) {\r\n            activate(walletconnect)\r\n            sessionStorage.setItem('type', 'walletconnect')\r\n\r\n        } else {\r\n            if (account) {\r\n                sessionStorage.setItem('Walletaddress', account)\r\n                sessionStorage.setItem('type', 'walletconnect')\r\n                setAddress(account)\r\n            }\r\n        }\r\n        await setActivatingConnector(Injected);\r\n    };\r\n\r\n    //save account in session storage when we get account\r\n    // React.useEffect(() => {\r\n    //     if (account) {\r\n    //         Router.push('/');\r\n    //     }\r\n    // }, [account]);\r\n\r\n    const loadWeb3 = async () => {\r\n        let isConnected = false;\r\n        try {\r\n            if (window.ethereum) {\r\n                window.web3 = new Web3(window.ethereum);\r\n                await window.ethereum.enable();\r\n                isConnected = true;\r\n            } else if (window.web3) {\r\n                window.web3 = new Web3(window.web3.currentProvider);\r\n                isConnected = true;\r\n            } else {\r\n                isConnected = false;\r\n                notification.open({\r\n                    message: 'Metamask is not installed',\r\n                    description:\r\n                        ' please install it on your browser to connect.',\r\n                    duration: 500,\r\n                });\r\n                // \"Metamask is not installed, please install it on your browser to connect.\",\r\n            }\r\n            if (isConnected === true) {\r\n                const web3 = window.web3;\r\n                let accounts = await web3.eth.getAccounts();\r\n                props.dispatch(login(accounts[0]));\r\n                Router.push('/');\r\n\r\n                window.ethereum.on('accountsChanged', function (accounts) {\r\n                    props.dispatch(login(accounts[0]));\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"ps-my-account\">\r\n            <div className=\"container\">\r\n                <div className=\"ps-form--account\">\r\n                    <div className=\"ps-tab active\" id=\"sign-in\">\r\n                        <div className=\"ps-form__content\">\r\n                            <h5>Connect to your wallet</h5>\r\n\r\n                            <div className=\"form-group submit\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"ps-btn ps-btn--fullwidth\"\r\n                                    style={{ padding: '15px 0px' }}\r\n                                    onClick={() => {\r\n                                        handleLoginSubmit('metamask');\r\n                                    }}>\r\n                                    <LazyLoad>\r\n                                        <img\r\n                                            src=\"/static/img/meta-mask.png\"\r\n                                            alt=\"Luxury Ledger Market\"\r\n                                            style={{ paddingRight: '15px' }}\r\n                                        />\r\n                                    </LazyLoad>\r\n                                    Connect to Metamask\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"ps-btn mt-3 ps-btn--fullwidth\"\r\n                                    style={{ padding: '15px 0px' }}\r\n                                    onClick={() => {\r\n                                        handleLoginSubmit('formatic');\r\n                                    }}>\r\n                                    <LazyLoad>\r\n                                        <img\r\n                                            src=\"/static/img/formatic.png\"\r\n                                            alt=\"Luxury Ledger Market\"\r\n                                            style={{\r\n                                                paddingRight: '15px',\r\n                                                width: '55px',\r\n                                            }}\r\n                                        />\r\n                                    </LazyLoad>\r\n                                    Connect to Formatic\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"ps-btn mt-3 ps-btn--fullwidth\"\r\n                                    style={{ padding: '15px 0px' }}\r\n                                    onClick={() => {\r\n                                        handleLoginSubmit('authereum');\r\n                                    }}>\r\n                                    <LazyLoad>\r\n                                        <img\r\n                                            src=\"/static/img/authereum-logo.png\"\r\n                                            alt=\"Luxury Ledger Market\"\r\n                                            style={{\r\n                                                paddingRight: '15px',\r\n                                                width: '55px',\r\n                                                height: '35px',\r\n                                            }}\r\n                                        />\r\n                                    </LazyLoad>\r\n                                    Connect to Authereum\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"ps-btn mt-3 ps-btn--fullwidth\"\r\n                                    style={{ padding: '15px 0px' }}\r\n                                    onClick={() => {\r\n                                        handleLoginSubmit('walletconnect');\r\n                                    }}>\r\n                                    <LazyLoad>\r\n                                        <img\r\n                                            src=\"/static/img/walletconnect.png\"\r\n                                            alt=\"Luxury Ledger Market\"\r\n                                            style={{\r\n                                                paddingRight: '15px',\r\n                                                width: '55px',\r\n                                            }}\r\n                                        />\r\n                                    </LazyLoad>\r\n                                    Connect to WalletConnect\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"ps-btn mt-3 ps-btn--fullwidth\"\r\n                                    style={{ padding: '15px 0px' }}\r\n                                    onClick={() => {\r\n                                        handleLoginSubmit('torus');\r\n                                    }}>\r\n                                    <LazyLoad>\r\n                                        <img\r\n                                            src=\"/static/img/torus-logo.png\"\r\n                                            alt=\"Luxury Ledger Market\"\r\n                                            style={{\r\n                                                paddingRight: '15px',\r\n                                                width: '55px',\r\n                                            }}\r\n                                        />\r\n                                    </LazyLoad>\r\n                                    Connect to Torus\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"ps-btn mt-3 ps-btn--fullwidth\"\r\n                                    style={{ padding: '15px 0px' }}\r\n                                    onClick={() => {\r\n                                        handleLoginSubmit('ledger');\r\n                                    }}>\r\n                                    <LazyLoad>\r\n                                        <img\r\n                                            src=\"/static/img/Ledger-logo.png\"\r\n                                            alt=\"Luxury Ledger Market\"\r\n                                            style={{\r\n                                                paddingRight: '15px',\r\n                                                width: '55px',\r\n                                            }}\r\n                                        />\r\n                                    </LazyLoad>\r\n                                    Connect to Ledger\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ps-form__footer\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// const mapStateToProps = (state) => {\r\n//     return state.auth;\r\n// };\r\n// export default connect(mapStateToProps)(Login);\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}