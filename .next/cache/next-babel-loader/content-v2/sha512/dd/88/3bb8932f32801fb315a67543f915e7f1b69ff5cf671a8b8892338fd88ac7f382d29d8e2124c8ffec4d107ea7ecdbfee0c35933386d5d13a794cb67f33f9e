{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"F:/React Clone/market-luxery-leader/market-luxery-leader/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"F:\\\\React Clone\\\\market-luxery-leader\\\\market-luxery-leader\\\\components\\\\partials\\\\account\\\\sellerModules\\\\SellerProductPrice.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Form, Input, Select, Button } from 'antd';\nvar Option = Select.Option;\n\nvar PriceInput = function PriceInput(_ref) {\n  _s();\n\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? {} : _ref$value,\n      onChange = _ref.onChange;\n\n  var _useState = useState(0),\n      number = _useState[0],\n      setNumber = _useState[1];\n\n  var _useState2 = useState('rmb'),\n      currency = _useState2[0],\n      setCurrency = _useState2[1];\n\n  var triggerChange = function triggerChange(changedValue) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(_objectSpread(_objectSpread({\n      number: number,\n      currency: currency\n    }, value), changedValue));\n  };\n\n  var onNumberChange = function onNumberChange(e) {\n    var newNumber = parseInt(e.target.value || '0', 10);\n\n    if (Number.isNaN(number)) {\n      return;\n    }\n\n    if (!('number' in value)) {\n      setNumber(newNumber);\n    }\n\n    triggerChange({\n      number: newNumber\n    });\n  };\n\n  var onCurrencyChange = function onCurrencyChange(newCurrency) {\n    if (!('currency' in value)) {\n      setCurrency(newCurrency);\n    }\n\n    triggerChange({\n      currency: newCurrency\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: value.number || number,\n      onChange: onNumberChange,\n      style: {\n        width: 100\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n      value: value.currency || currency,\n      style: {\n        width: 80,\n        margin: '0 8px'\n      },\n      onChange: onCurrencyChange,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"rmb\",\n        children: \"GBR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"dollar\",\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"dollar\",\n        children: \"Euro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PriceInput, \"jai7kXIu40aduisP49YC2evIGPE=\");\n\n_c = PriceInput;\n\nvar SellerProductPrice = function SellerProductPrice() {\n  var onFinish = function onFinish(values) {\n    console.log('Received values from form: ', values);\n  };\n\n  var checkPrice = function checkPrice(_, value) {\n    if (value.number > 0) {\n      return Promise.resolve();\n    }\n\n    return Promise.reject(new Error('Price must be greater than zero!'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"customized_form_controls\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      price: {\n        number: 0,\n        currency: 'rmb'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"price\",\n      label: \"Price\",\n      rules: [{\n        validator: checkPrice\n      }],\n      children: /*#__PURE__*/_jsxDEV(PriceInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, _this);\n};\n\n_c2 = SellerProductPrice;\nexport default SellerProductPrice;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PriceInput\");\n$RefreshReg$(_c2, \"SellerProductPrice\");","map":{"version":3,"sources":["F:/React Clone/market-luxery-leader/market-luxery-leader/components/partials/account/sellerModules/SellerProductPrice.jsx"],"names":["React","useState","Form","Input","Select","Button","Option","PriceInput","value","onChange","number","setNumber","currency","setCurrency","triggerChange","changedValue","onNumberChange","e","newNumber","parseInt","target","Number","isNaN","onCurrencyChange","newCurrency","width","margin","SellerProductPrice","onFinish","values","console","log","checkPrice","_","Promise","resolve","reject","Error","price","validator"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,MAA5C;IACQC,M,GAAWF,M,CAAXE,M;;AAER,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA8B;AAAA;;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnB,EAAmB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACjBR,QAAQ,CAAC,CAAD,CADS;AAAA,MACtCS,MADsC;AAAA,MAC9BC,SAD8B;;AAAA,mBAEbV,QAAQ,CAAC,KAAD,CAFK;AAAA,MAEtCW,QAFsC;AAAA,MAE5BC,WAF4B;;AAI7C,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,YAAD,EAAkB;AACpCN,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ;AACJC,MAAAA,MAAM,EAANA,MADI;AAEJE,MAAAA,QAAQ,EAARA;AAFI,OAGDJ,KAHC,GAIDO,YAJC,EAAR;AAMH,GAPD;;AASA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC1B,QAAMC,SAAS,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASZ,KAAT,IAAkB,GAAnB,EAAwB,EAAxB,CAA1B;;AAEA,QAAIa,MAAM,CAACC,KAAP,CAAaZ,MAAb,CAAJ,EAA0B;AACtB;AACH;;AAED,QAAI,EAAE,YAAYF,KAAd,CAAJ,EAA0B;AACtBG,MAAAA,SAAS,CAACO,SAAD,CAAT;AACH;;AAEDJ,IAAAA,aAAa,CAAC;AACVJ,MAAAA,MAAM,EAAEQ;AADE,KAAD,CAAb;AAGH,GAdD;;AAgBA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAiB;AACtC,QAAI,EAAE,cAAchB,KAAhB,CAAJ,EAA4B;AACxBK,MAAAA,WAAW,CAACW,WAAD,CAAX;AACH;;AAEDV,IAAAA,aAAa,CAAC;AACVF,MAAAA,QAAQ,EAAEY;AADA,KAAD,CAAb;AAGH,GARD;;AAUA,sBACI;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAEhB,KAAK,CAACE,MAAN,IAAgBA,MAF3B;AAGI,MAAA,QAAQ,EAAEM,cAHd;AAII,MAAA,KAAK,EAAE;AACHS,QAAAA,KAAK,EAAE;AADJ;AAJX;AAAA;AAAA;AAAA;AAAA,aADJ,eASI,QAAC,MAAD;AACI,MAAA,KAAK,EAAEjB,KAAK,CAACI,QAAN,IAAkBA,QAD7B;AAEI,MAAA,KAAK,EAAE;AACHa,QAAAA,KAAK,EAAE,EADJ;AAEHC,QAAAA,MAAM,EAAE;AAFL,OAFX;AAMI,MAAA,QAAQ,EAAEH,gBANd;AAAA,8BAOI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,eAQI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,eASI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAuBH,CA9DD;;GAAMhB,U;;KAAAA,U;;AAgEN,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,MAA3C;AACH,GAFD;;AAIA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAIzB,KAAJ,EAAc;AAC7B,QAAIA,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AAClB,aAAOwB,OAAO,CAACC,OAAR,EAAP;AACH;;AAED,WAAOD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAU,kCAAV,CAAf,CAAP;AACH,GAND;;AAQA,sBACI,QAAC,IAAD;AACI,IAAA,IAAI,EAAC,0BADT;AAEI,IAAA,MAAM,EAAC,QAFX;AAGI,IAAA,QAAQ,EAAET,QAHd;AAII,IAAA,aAAa,EAAE;AACXU,MAAAA,KAAK,EAAE;AACH5B,QAAAA,MAAM,EAAE,CADL;AAEHE,QAAAA,QAAQ,EAAE;AAFP;AADI,KAJnB;AAAA,4BAUI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,KAAK,EAAE,CACH;AACI2B,QAAAA,SAAS,EAAEP;AADf,OADG,CAHX;AAAA,6BAQI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,aAVJ,eAoBI,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA4BH,CAzCD;;MAAML,kB;AA2CN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input, Select, Button } from 'antd';\r\nconst { Option } = Select;\r\n\r\nconst PriceInput = ({ value = {}, onChange }) => {\r\n    const [number, setNumber] = useState(0);\r\n    const [currency, setCurrency] = useState('rmb');\r\n\r\n    const triggerChange = (changedValue) => {\r\n        onChange?.({\r\n            number,\r\n            currency,\r\n            ...value,\r\n            ...changedValue,\r\n        });\r\n    };\r\n\r\n    const onNumberChange = (e) => {\r\n        const newNumber = parseInt(e.target.value || '0', 10);\r\n\r\n        if (Number.isNaN(number)) {\r\n            return;\r\n        }\r\n\r\n        if (!('number' in value)) {\r\n            setNumber(newNumber);\r\n        }\r\n\r\n        triggerChange({\r\n            number: newNumber,\r\n        });\r\n    };\r\n\r\n    const onCurrencyChange = (newCurrency) => {\r\n        if (!('currency' in value)) {\r\n            setCurrency(newCurrency);\r\n        }\r\n\r\n        triggerChange({\r\n            currency: newCurrency,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <span>\r\n            <Input\r\n                type=\"text\"\r\n                value={value.number || number}\r\n                onChange={onNumberChange}\r\n                style={{\r\n                    width: 100,\r\n                }}\r\n            />\r\n            <Select\r\n                value={value.currency || currency}\r\n                style={{\r\n                    width: 80,\r\n                    margin: '0 8px',\r\n                }}\r\n                onChange={onCurrencyChange}>\r\n                <Option value=\"rmb\">GBR</Option>\r\n                <Option value=\"dollar\">USD</Option>\r\n                <Option value=\"dollar\">Euro</Option>\r\n            </Select>\r\n        </span>\r\n    );\r\n};\r\n\r\nconst SellerProductPrice = () => {\r\n    const onFinish = (values) => {\r\n        console.log('Received values from form: ', values);\r\n    };\r\n\r\n    const checkPrice = (_, value) => {\r\n        if (value.number > 0) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(new Error('Price must be greater than zero!'));\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"customized_form_controls\"\r\n            layout=\"inline\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                price: {\r\n                    number: 0,\r\n                    currency: 'rmb',\r\n                },\r\n            }}>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                rules={[\r\n                    {\r\n                        validator: checkPrice,\r\n                    },\r\n                ]}>\r\n                <PriceInput />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SellerProductPrice;\r\n"]},"metadata":{},"sourceType":"module"}