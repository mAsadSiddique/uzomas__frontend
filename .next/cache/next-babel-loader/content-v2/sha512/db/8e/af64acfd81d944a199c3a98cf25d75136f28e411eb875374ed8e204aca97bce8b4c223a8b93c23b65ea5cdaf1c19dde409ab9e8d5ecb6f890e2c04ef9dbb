{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/itxnaeem/f-w/market-luxery-leader/components/shared/widgets/WidgetShopBrands.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport ProductRepository from '~/repositories/ProductRepository';\nimport Link from 'next/link';\nimport { Checkbox } from 'antd';\nimport { Radio, Input } from 'antd';\nimport { useRouter } from 'next/router';\n\nconst WidgetShopBrands = () => {\n  const Router = useRouter();\n  const {\n    slug\n  } = Router.query;\n  const {\n    0: brands,\n    1: setBrands\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function getCategories() {\n    setLoading(true);\n    const responseData = await ProductRepository.getBrands();\n\n    if (responseData) {\n      let brandsGroup = [];\n\n      if (responseData.length > 0) {\n        responseData.forEach(brand => {\n          brandsGroup.push({\n            id: brand.id,\n            value: brand.slug,\n            label: brand.name\n          });\n        });\n      }\n\n      setBrands(brandsGroup);\n      setTimeout(function () {\n        setLoading(false);\n      }.bind(this), 250);\n    }\n  }\n\n  function handleSelectBrand(e) {\n    Router.push(`/brand/${e.target.value}`);\n  }\n\n  useEffect(() => {\n    getCategories();\n  }, []); // Views\n\n  let brandsView;\n\n  if (!loading) {\n    if (brands && brands.length > 0) {\n      const items = brands.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `shop/${item.slug}`,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this));\n      brandsView = /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ps-list--brands\",\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 26\n      }, this);\n    } else {}\n  } else {\n    brandsView = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"widget widget_shop widget_shop--brand\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"widget-title\",\n      children: \"By Brands\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n      children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n        defaultValue: slug,\n        options: brands,\n        onChange: handleSelectBrand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\nexport default WidgetShopBrands;","map":{"version":3,"sources":["/home/itxnaeem/f-w/market-luxery-leader/components/shared/widgets/WidgetShopBrands.jsx"],"names":["React","useEffect","useState","ProductRepository","Link","Checkbox","Radio","Input","useRouter","WidgetShopBrands","Router","slug","query","brands","setBrands","loading","setLoading","getCategories","responseData","getBrands","brandsGroup","length","forEach","brand","push","id","value","label","name","setTimeout","bind","handleSelectBrand","e","target","brandsView","items","map","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,MAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;;AAEA,iBAAee,aAAf,GAA+B;AAC3BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,YAAY,GAAG,MAAMf,iBAAiB,CAACgB,SAAlB,EAA3B;;AACA,QAAID,YAAJ,EAAkB;AACd,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAIF,YAAY,CAACG,MAAb,GAAsB,CAA1B,EAA6B;AACzBH,QAAAA,YAAY,CAACI,OAAb,CAAsBC,KAAD,IAAW;AAC5BH,UAAAA,WAAW,CAACI,IAAZ,CAAiB;AACbC,YAAAA,EAAE,EAAEF,KAAK,CAACE,EADG;AAEbC,YAAAA,KAAK,EAAEH,KAAK,CAACZ,IAFA;AAGbgB,YAAAA,KAAK,EAAEJ,KAAK,CAACK;AAHA,WAAjB;AAKH,SAND;AAOH;;AACDd,MAAAA,SAAS,CAACM,WAAD,CAAT;AAEAS,MAAAA,UAAU,CACN,YAAY;AACRb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAFD,CAEEc,IAFF,CAEO,IAFP,CADM,EAIN,GAJM,CAAV;AAMH;AACJ;;AAED,WAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1BtB,IAAAA,MAAM,CAACc,IAAP,CAAa,UAASQ,CAAC,CAACC,MAAF,CAASP,KAAM,EAArC;AACH;;AAEDzB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT,CAnC2B,CAuC3B;;AACA,MAAIiB,UAAJ;;AACA,MAAI,CAACnB,OAAL,EAAc;AACV,QAAIF,MAAM,IAAIA,MAAM,CAACQ,MAAP,GAAgB,CAA9B,EAAiC;AAC7B,YAAMc,KAAK,GAAGtB,MAAM,CAACuB,GAAP,CAAYC,IAAD,iBACrB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,QAAOA,IAAI,CAAC1B,IAAK,EAA9B;AAAA,oBAAkC0B,IAAI,CAACT;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ,SAASS,IAAI,CAACZ,EAAd;AAAA;AAAA;AAAA;AAAA,cADU,CAAd;AAKAS,MAAAA,UAAU,gBAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAb;AACH,KAPD,MAOO,CACN;AACJ,GAVD,MAUO;AACHD,IAAAA,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;AACH;;AACD,sBACI;AAAO,IAAA,SAAS,EAAC,uCAAjB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AACI,QAAA,YAAY,EAAEvB,IADlB;AAEI,QAAA,OAAO,EAAEE,MAFb;AAGI,QAAA,QAAQ,EAAEkB;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlED;;AAoEA,eAAetB,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ProductRepository from '~/repositories/ProductRepository';\r\nimport Link from 'next/link';\r\nimport { Checkbox } from 'antd';\r\nimport { Radio, Input } from 'antd';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst WidgetShopBrands = () => {\r\n    const Router = useRouter();\r\n    const { slug } = Router.query;\r\n    const [brands, setBrands] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function getCategories() {\r\n        setLoading(true);\r\n        const responseData = await ProductRepository.getBrands();\r\n        if (responseData) {\r\n            let brandsGroup = [];\r\n            if (responseData.length > 0) {\r\n                responseData.forEach((brand) => {\r\n                    brandsGroup.push({\r\n                        id: brand.id,\r\n                        value: brand.slug,\r\n                        label: brand.name,\r\n                    });\r\n                });\r\n            }\r\n            setBrands(brandsGroup);\r\n\r\n            setTimeout(\r\n                function () {\r\n                    setLoading(false);\r\n                }.bind(this),\r\n                250\r\n            );\r\n        }\r\n    }\r\n\r\n    function handleSelectBrand(e) {\r\n        Router.push(`/brand/${e.target.value}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, []);\r\n\r\n    // Views\r\n    let brandsView;\r\n    if (!loading) {\r\n        if (brands && brands.length > 0) {\r\n            const items = brands.map((item) => (\r\n                <li key={item.id}>\r\n                    <Link href={`shop/${item.slug}`}>{item.name}</Link>\r\n                </li>\r\n            ));\r\n            brandsView = <ul className=\"ps-list--brands\">{items}</ul>;\r\n        } else {\r\n        }\r\n    } else {\r\n        brandsView = <p>Loading...</p>;\r\n    }\r\n    return (\r\n        <aside className=\"widget widget_shop widget_shop--brand\">\r\n            <h4 className=\"widget-title\">By Brands</h4>\r\n            <figure>\r\n                <Radio.Group\r\n                    defaultValue={slug}\r\n                    options={brands}\r\n                    onChange={handleSelectBrand}\r\n                />\r\n            </figure>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default WidgetShopBrands;\r\n"]},"metadata":{},"sourceType":"module"}