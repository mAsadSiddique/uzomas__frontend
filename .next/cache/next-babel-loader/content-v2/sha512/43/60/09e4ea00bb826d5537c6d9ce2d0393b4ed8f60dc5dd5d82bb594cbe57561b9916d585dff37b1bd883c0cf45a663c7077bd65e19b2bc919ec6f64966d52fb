{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"F:/UZomus/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/UZomus/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"F:/UZomus/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { login } from '../../../store/auth/action';\nimport Web3 from 'web3';\nimport LazyLoad from 'react-lazyload';\nimport { useWeb3React } from '@web3-react/core';\nimport { Form, Input, notification } from 'antd';\nimport { connect } from 'react-redux';\nimport { Injected, Ledger, Trezor, Torus, Fortmatic, Authereum, WalletConnect } from './walletConnectors';\n\nvar Login = function Login(props) {\n  var web3 = new Web3(Web3.givenProvider);\n  var context = useWeb3React();\n  var activate = context.activate,\n      active = context.active,\n      error = context.error,\n      deactivate = context.deactivate,\n      library = context.library,\n      chainId = context.chainId,\n      account = context.account,\n      connector = context.connector;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activatingConnector = _React$useState2[0],\n      setActivatingConnector = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n  React.useEffect(function () {\n    if (props.isLoggedIn === true) {\n      Router.push('/');\n    }\n  }, [props.isLoggedIn]);\n\n  var handleFeatureWillUpdate = function handleFeatureWillUpdate(e) {\n    notification.open({\n      message: 'Opp! Something went wrong.',\n      description: 'This feature has been updated later!',\n      duration: 500\n    });\n  };\n\n  var handleLoginSubmit = function handleLoginSubmit(accountType) {\n    console.log('test');\n\n    if (accountType === 'metamask') {\n      loadWeb3();\n    } else if (accountType === 'ledger') {\n      activate(Ledger);\n    } else if (accountType === 'walletconnect') {\n      activate(WalletConnect);\n    } else if (accountType === 'formatic') {\n      activate(Fortmatic);\n    } else if (accountType === 'authereum') {\n      activate(Authereum);\n    }\n  }; //save account in session storage when we get account\n  // React.useEffect(() => {\n  //     if (account) {\n  //         Router.push('/');\n  //     }\n  // }, [account]);\n\n\n  var loadWeb3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var isConnected, _web, accounts;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isConnected = false;\n              _context.prev = 1;\n\n              if (!window.ethereum) {\n                _context.next = 9;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 6;\n              return window.ethereum.enable();\n\n            case 6:\n              isConnected = true;\n              _context.next = 10;\n              break;\n\n            case 9:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n                isConnected = true;\n              } else {\n                isConnected = false;\n                notification.open({\n                  message: 'Metamask is not installed',\n                  description: ' please install it on your browser to connect.',\n                  duration: 500\n                }); // \"Metamask is not installed, please install it on your browser to connect.\",\n              }\n\n            case 10:\n              if (!(isConnected === true)) {\n                _context.next = 18;\n                break;\n              }\n\n              _web = window.web3;\n              _context.next = 14;\n              return _web.eth.getAccounts();\n\n            case 14:\n              accounts = _context.sent;\n              props.dispatch(login(accounts[0]));\n              Router.push('/');\n              window.ethereum.on('accountsChanged', function (accounts) {\n                props.dispatch(login(accounts[0]));\n              });\n\n            case 18:\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 20]]);\n    }));\n\n    return function loadWeb3() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"ps-my-account\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"ps-form--account\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"ps-tab active\",\n          id: \"sign-in\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"ps-form__content\",\n            children: [/*#__PURE__*/_jsx(\"h5\", {\n              children: \"Connect to your wallet\"\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group submit\",\n              children: [/*#__PURE__*/_jsxs(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('metamask');\n                },\n                children: [/*#__PURE__*/_jsx(LazyLoad, {\n                  children: /*#__PURE__*/_jsx(\"img\", {\n                    src: \"/static/img/meta-mask.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px'\n                    }\n                  })\n                }), \"Connect to Metamask\"]\n              }), /*#__PURE__*/_jsxs(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('formatic');\n                },\n                children: [/*#__PURE__*/_jsx(LazyLoad, {\n                  children: /*#__PURE__*/_jsx(\"img\", {\n                    src: \"/static/img/formatic.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px'\n                    }\n                  })\n                }), \"Connect to Formatic\"]\n              }), /*#__PURE__*/_jsxs(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('authereum');\n                },\n                children: [/*#__PURE__*/_jsx(LazyLoad, {\n                  children: /*#__PURE__*/_jsx(\"img\", {\n                    src: \"/static/img/authereum-logo.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px',\n                      height: '35px'\n                    }\n                  })\n                }), \"Connect to Authereum\"]\n              }), /*#__PURE__*/_jsxs(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('walletconnect');\n                },\n                children: [/*#__PURE__*/_jsx(LazyLoad, {\n                  children: /*#__PURE__*/_jsx(\"img\", {\n                    src: \"/static/img/walletconnect.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px'\n                    }\n                  })\n                }), \"Connect to WalletConnect\"]\n              }), /*#__PURE__*/_jsxs(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('torus');\n                },\n                children: [/*#__PURE__*/_jsx(LazyLoad, {\n                  children: /*#__PURE__*/_jsx(\"img\", {\n                    src: \"/static/img/torus-logo.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px'\n                    }\n                  })\n                }), \"Connect to Torus\"]\n              }), /*#__PURE__*/_jsxs(\"button\", {\n                type: \"submit\",\n                className: \"ps-btn mt-3 ps-btn--fullwidth\",\n                style: {\n                  padding: '15px 0px'\n                },\n                onClick: function onClick() {\n                  handleLoginSubmit('ledger');\n                },\n                children: [/*#__PURE__*/_jsx(LazyLoad, {\n                  children: /*#__PURE__*/_jsx(\"img\", {\n                    src: \"/static/img/Ledger-logo.png\",\n                    alt: \"Luxury Ledger Market\",\n                    style: {\n                      paddingRight: '15px',\n                      width: '55px'\n                    }\n                  })\n                }), \"Connect to Ledger\"]\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"ps-form__footer\"\n          })]\n        })\n      })\n    })\n  });\n}; // const mapStateToProps = (state) => {\n//     return state.auth;\n// };\n// export default connect(mapStateToProps)(Login);\n\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}