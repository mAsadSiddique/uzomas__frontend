{"ast":null,"code":"import _regeneratorRuntime from \"F:/UZOMOS PROJECT/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"F:/UZOMOS PROJECT/uzomas_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"F:\\\\UZOMOS PROJECT\\\\uzomas_frontend\\\\components\\\\partials\\\\post\\\\RelatedPosts.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PostRepository from '~/repositories/PostRepository';\nimport PostGrid from '~/components/elements/post/PostGrid';\n\nvar RelatedPosts = function RelatedPosts() {\n  _s();\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  function getPosts() {\n    return _getPosts.apply(this, arguments);\n  }\n\n  function _getPosts() {\n    _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var queries, APIPosts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              queries = {\n                _limit: 4\n              };\n              _context.next = 3;\n              return PostRepository.getPosts(queries);\n\n            case 3:\n              APIPosts = _context.sent;\n\n              if (!APIPosts) {\n                _context.next = 10;\n                break;\n              }\n\n              setTimeout(function () {\n                setLoading(false);\n              }, 200);\n              setPosts(APIPosts);\n              return _context.abrupt(\"return\", APIPosts);\n\n            case 10:\n              setPosts(null);\n              return _context.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getPosts.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getPosts();\n  }, []);\n  var postItemsView;\n\n  if (!loading && posts) {\n    postItemsView = posts.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" col-md-3 col-sm-6 col-6\",\n        children: /*#__PURE__*/_jsxDEV(PostGrid, {\n          post: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ps-related-posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Related Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: postItemsView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RelatedPosts, \"iyeZLpCGdlQJNDFi8bTJGpCQYBY=\");\n\n_c = RelatedPosts;\nexport default RelatedPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"RelatedPosts\");","map":{"version":3,"sources":["F:/UZOMOS PROJECT/uzomas_frontend/components/partials/post/RelatedPosts.jsx"],"names":["React","useEffect","useState","PostRepository","PostGrid","RelatedPosts","loading","setLoading","posts","setPosts","getPosts","queries","_limit","APIPosts","setTimeout","postItemsView","map","item","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,qCAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,kBACOH,QAAQ,CAAC,IAAD,CADf;AAAA,MAChBI,OADgB;AAAA,MACPC,UADO;;AAAA,mBAEGL,QAAQ,CAAC,IAAD,CAFX;AAAA,MAEhBM,KAFgB;AAAA,MAETC,QAFS;;AAAA,WAIRC,QAJQ;AAAA;AAAA;;AAAA;AAAA,yEAIvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,cAAAA,OAAO,GAAG;AACNC,gBAAAA,MAAM,EAAE;AADF,eAAV;AAFJ;AAAA,qBAKqBT,cAAc,CAACO,QAAf,CAAwBC,OAAxB,CALrB;;AAAA;AAKIE,cAAAA,QALJ;;AAAA,mBAMQA,QANR;AAAA;AAAA;AAAA;;AAOQC,cAAAA,UAAU,CAAC,YAAY;AACnBP,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACH,eAFS,EAEP,GAFO,CAAV;AAGAE,cAAAA,QAAQ,CAACI,QAAD,CAAR;AAVR,+CAWeA,QAXf;;AAAA;AAaQJ,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAbR,+CAce,IAdf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJuB;AAAA;AAAA;;AAsBvBR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIK,aAAJ;;AACA,MAAI,CAACT,OAAD,IAAYE,KAAhB,EAAuB;AACnBO,IAAAA,aAAa,GAAGP,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD,EAAU;AAChC,0BACI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,SAA+CA,IAAI,CAACC,EAApD;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH,KANe,CAAhB;AAOH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAAsBH;AAAtB;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CA3CD;;GAAMV,Y;;KAAAA,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PostRepository from '~/repositories/PostRepository';\r\nimport PostGrid from '~/components/elements/post/PostGrid';\r\n\r\nconst RelatedPosts = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [posts, setPosts] = useState(null);\r\n\r\n    async function getPosts() {\r\n        let queries, APIPosts;\r\n        queries = {\r\n            _limit: 4,\r\n        };\r\n        APIPosts = await PostRepository.getPosts(queries);\r\n        if (APIPosts) {\r\n            setTimeout(function () {\r\n                setLoading(false);\r\n            }, 200);\r\n            setPosts(APIPosts);\r\n            return APIPosts;\r\n        } else {\r\n            setPosts(null);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n\r\n    let postItemsView;\r\n    if (!loading && posts) {\r\n        postItemsView = posts.map((item) => {\r\n            return (\r\n                <div className=\" col-md-3 col-sm-6 col-6\" key={item.id}>\r\n                    <PostGrid post={item} />\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"ps-related-posts\">\r\n            <h3>Related Posts</h3>\r\n            <div className=\"row\">{postItemsView}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RelatedPosts;\r\n"]},"metadata":{},"sourceType":"module"}