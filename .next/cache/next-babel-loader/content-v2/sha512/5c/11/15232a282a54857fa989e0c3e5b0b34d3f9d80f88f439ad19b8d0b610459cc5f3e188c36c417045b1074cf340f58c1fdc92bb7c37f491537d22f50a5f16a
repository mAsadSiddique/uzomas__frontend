{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\UZomus\\\\uzomas_frontend\\\\components\\\\partials\\\\vendor\\\\SwitchVendor.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport Link from 'next/link';\nimport { changeVendor } from '~/store/vendor/action';\n\nvar SwitchVendor = function SwitchVendor() {\n  _s();\n\n  var _useState = useState(false),\n      vendor = _useState[0],\n      setVendor = _useState[1];\n\n  var _useState2 = useState(false),\n      condition = _useState2[0],\n      setcondition = _useState2[1];\n\n  var result = useSelector(function (state) {\n    return state.vendor;\n  });\n  var dispatch = useDispatch(function (state) {\n    return state.vendor;\n  });\n  console.log('result', result);\n  console.log('Vendor', vendor);\n  var switchVendor = vendor === false ? // <Link href=\"/vendor/become-a-vendor\">\n  //     <a>Switch to Seller</a>\n  // </Link>\n  {\n    path: '/vendor/become-a-vendor',\n    change: 'Switch to Seller',\n    cond: true\n  } : // <Link href=\"/vendor/store-list\">\n  //     <a>Switch to Buyer</a>\n  // </Link>\n  {\n    path: '/vendor/store-list',\n    change: 'Switch to Buyer',\n    cond: false\n  }; // handleChangeCurrency = (e, currency) => {\n  //     e.preventDefault();\n  //     this.props.dispatch(changeCurrency(currency));\n  // };\n\n  var handleChangeVendor = function handleChangeVendor(e, switchVendor) {\n    console.log('Dispatch Clecked', vendor);\n    e.preventDefault();\n    vendor === false ? setVendor(true) : setVendor(false);\n    condition === false ? setcondition(true) : setcondition(false);\n    dispatch(changeVendor(switchVendor));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick(e) {\n        return handleChangeVendor(e, switchVendor);\n      },\n      children: switchVendor.change === 'Switch to Seller' ? /*#__PURE__*/_jsxDEV(Link, {\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        href: \"\".concat(switchVendor.path),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Switch to Seller\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, _this) : /*#__PURE__*/_jsxDEV(Link, {\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        href: \"\".concat(switchVendor.path),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Switch to Buyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n}; // const mapStateToProps = (state) => {\n//     return state.vendor;\n// };\n\n\n_s(SwitchVendor, \"a/b4paJ6FkUmbouQBAUSUyRFd28=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SwitchVendor;\nexport default SwitchVendor;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchVendor\");","map":{"version":3,"sources":["F:/UZomus/uzomas_frontend/components/partials/vendor/SwitchVendor.jsx"],"names":["React","useState","useDispatch","useSelector","Button","Link","changeVendor","SwitchVendor","vendor","setVendor","condition","setcondition","result","state","dispatch","console","log","switchVendor","path","change","cond","handleChangeVendor","e","preventDefault"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,kBACKN,QAAQ,CAAC,KAAD,CADb;AAAA,MAChBO,MADgB;AAAA,MACRC,SADQ;;AAAA,mBAEWR,QAAQ,CAAC,KAAD,CAFnB;AAAA,MAEhBS,SAFgB;AAAA,MAELC,YAFK;;AAGvB,MAAMC,MAAM,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACL,MAAjB;AAAA,GAAD,CAA1B;AACA,MAAMM,QAAQ,GAAGZ,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACL,MAAjB;AAAA,GAAD,CAA5B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,MAAtB;AAEA,MAAMS,YAAY,GACdT,MAAM,KAAK,KAAX,GACM;AACA;AACA;AACA;AAAEU,IAAAA,IAAI,EAAE,yBAAR;AAAmCC,IAAAA,MAAM,EAAE,kBAA3C;AAA+DC,IAAAA,IAAI,EAAE;AAArE,GAJN,GAKM;AACA;AACA;AACA;AAAEF,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,MAAM,EAAE,iBAAtC;AAAyDC,IAAAA,IAAI,EAAE;AAA/D,GATV,CARuB,CAmBvB;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,CAAD,EAAIL,YAAJ,EAAqB;AAC5CF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,MAAhC;AACAc,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,MAAM,KAAK,KAAX,GAAmBC,SAAS,CAAC,IAAD,CAA5B,GAAqCA,SAAS,CAAC,KAAD,CAA9C;AACAC,IAAAA,SAAS,KAAK,KAAd,GAAsBC,YAAY,CAAC,IAAD,CAAlC,GAA2CA,YAAY,CAAC,KAAD,CAAvD;AACAG,IAAAA,QAAQ,CAACR,YAAY,CAACW,YAAD,CAAb,CAAR;AACH,GAND;;AAQA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,iBAACK,CAAD;AAAA,eAAOD,kBAAkB,CAACC,CAAD,EAAIL,YAAJ,CAAzB;AAAA,OAAjB;AAAA,gBACKA,YAAY,CAACE,MAAb,KAAwB,kBAAxB,gBACG,QAAC,IAAD;AACI,QAAA,OAAO,EAAE,iBAACG,CAAD;AAAA,iBAAOA,CAAC,CAACC,cAAF,EAAP;AAAA,SADb;AAEI,QAAA,IAAI,YAAKN,YAAY,CAACC,IAAlB,CAFR;AAAA,+BAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,eADH,gBAOG,QAAC,IAAD;AACI,QAAA,OAAO,EAAE,iBAACI,CAAD;AAAA,iBAAOA,CAAC,CAACC,cAAF,EAAP;AAAA,SADb;AAEI,QAAA,IAAI,YAAKN,YAAY,CAACC,IAAlB,CAFR;AAAA,+BAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAgCH,CAhED,C,CAkEA;AACA;AACA;;;GApEMX,Y;UAGaJ,W,EACED,W;;;KAJfK,Y;AAsEN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport { changeVendor } from '~/store/vendor/action';\r\n\r\nconst SwitchVendor = () => {\r\n    const [vendor, setVendor] = useState(false);\r\n    const [condition, setcondition] = useState(false);\r\n    const result = useSelector((state) => state.vendor);\r\n    const dispatch = useDispatch((state) => state.vendor);\r\n    console.log('result', result);\r\n    console.log('Vendor', vendor);\r\n\r\n    const switchVendor =\r\n        vendor === false\r\n            ? // <Link href=\"/vendor/become-a-vendor\">\r\n              //     <a>Switch to Seller</a>\r\n              // </Link>\r\n              { path: '/vendor/become-a-vendor', change: 'Switch to Seller', cond: true }\r\n            : // <Link href=\"/vendor/store-list\">\r\n              //     <a>Switch to Buyer</a>\r\n              // </Link>\r\n              { path: '/vendor/store-list', change: 'Switch to Buyer', cond: false };\r\n\r\n    // handleChangeCurrency = (e, currency) => {\r\n    //     e.preventDefault();\r\n    //     this.props.dispatch(changeCurrency(currency));\r\n    // };\r\n\r\n    const handleChangeVendor = (e, switchVendor) => {\r\n        console.log('Dispatch Clecked', vendor);\r\n        e.preventDefault();\r\n        vendor === false ? setVendor(true) : setVendor(false);\r\n        condition === false ? setcondition(true) : setcondition(false);\r\n        dispatch(changeVendor(switchVendor));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={(e) => handleChangeVendor(e, switchVendor)}>\r\n                {switchVendor.change === 'Switch to Seller' ? (\r\n                    <Link\r\n                        onClick={(e) => e.preventDefault()}\r\n                        href={`${switchVendor.path}`}>\r\n                        <a>Switch to Seller</a>\r\n                    </Link>\r\n                ) : (\r\n                    <Link\r\n                        onClick={(e) => e.preventDefault()}\r\n                        href={`${switchVendor.path}`}>\r\n                        <a>Switch to Buyer</a>\r\n                    </Link>\r\n                )}\r\n                {/* {vendor === true ? (\r\n                    <Link\r\n                        onClick={(e) => e.preventDefault()}\r\n                        href={`${result.Vendor.path}`}>\r\n                        <a>Switch to Seller</a>\r\n                    </Link>\r\n                ) : (\r\n                    <Link\r\n                        onClick={(e) => e.preventDefault()}\r\n                        href={`${result.Vendor.path}`}>\r\n                        <a>Switch to Buyer</a>\r\n                    </Link>\r\n                )} */}\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return state.vendor;\r\n// };\r\n\r\nexport default SwitchVendor;\r\n"]},"metadata":{},"sourceType":"module"}